---
- name: Create application with ArgoCD
  shell: /usr/local/bin/argocd --insecure --grpc-web login $(oc --context cluster1 -n argocd get route argocd-server -o jsonpath="{.status.ingress[*].host}{\"\n\"}"):443 --username {{ _argocd_default_user }} --password {{ _argocd_default_user_password }}; argocd app create --project default --name {{ item }}-mongo --repo http://$(oc --context cluster1 -n gogs get route gogs -o jsonpath='{.spec.host}')/student/federation-dev.git --path labs/lab-6-assets/overlays/{{ item }} --dest-server $(argocd cluster list | grep {{ item }} | awk '{print $1}') --dest-namespace mongo --revision master --sync-policy automated
  args:
    chdir: "{{ var_user_homepath }}"
  become: true
  become_user: "{{ _clientvm_student_user }}"
  loop: "{{ var_cluster_list }}"

- name: Check mongo cluster deployment progress
  shell: /usr/local/bin/argocd --insecure --grpc-web login $(oc --context cluster1 -n argocd get route argocd-server -o jsonpath="{.status.ingress[*].host}{\"\n\"}"):443 --username {{ _argocd_default_user }} --password {{ _argocd_default_user_password }}; wait-for-argo-app cluster1-mongo; argocd app sync cluster1-mongo; wait-for-argo-app cluster2-mongo; argocd app sync cluster2-mongo; wait-for-argo-app cluster3-mongo; argocd app sync cluster3-mongo
  args:
    chdir: "{{ var_user_homepath }}"
  become: true
  become_user: "{{ _clientvm_student_user }}"

- name: Wait for mongo cluster replicas
  shell: /usr/local/bin/argocd --insecure --grpc-web login $(oc --context cluster1 -n argocd get route argocd-server -o jsonpath="{.status.ingress[*].host}{\"\n\"}"):443 --username {{ _argocd_default_user }} --password {{ _argocd_default_user_password }}; for cluster in cluster1 cluster2 cluster3; do wait-for-deployment $cluster mongo mongo; done
  args:
    chdir: "{{ var_user_homepath }}"
  become: true
  become_user: "{{ _clientvm_student_user }}"

- name: Configure cluster1 as primary replica
  shell: /usr/local/bin/argocd --insecure --grpc-web login $(oc --context cluster1 -n argocd get route argocd-server -o jsonpath="{.status.ingress[*].host}{\"\n\"}"):443 --username {{ _argocd_default_user }} --password {{ _argocd_default_user_password }}; oc --context=cluster1 -n mongo label pod $(oc --context=cluster1 -n mongo get pod --selector="name=mongo" --output=jsonpath='{.items..metadata.name}') replicaset=primary
  args:
    chdir: "{{ var_user_homepath }}"
  become: true
  become_user: "{{ _clientvm_student_user }}"
